{"ast":null,"code":"var _jsxFileName = \"/var/www/pr2/react/users/user-list/src/components/users.js\";\nimport React, { useReducer, useEffect } from 'react';\nimport { useStore, URL } from '../store/globalContext';\nimport { User } from './user';\nimport { useGitHubApi } from '../services/dataFetching';\nimport { dataFetchReducer } from '../store/reducer';\nexport const Users = () => {\n  const {\n    isError,\n    isLoading,\n    allUsers\n  } = useStore();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, isError && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, \" Something went wrong\")), isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }) : allUsers.map(item => /*#__PURE__*/React.createElement(User, {\n    key: item.id,\n    user: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 32\n    }\n  })));\n};","map":{"version":3,"sources":["/var/www/pr2/react/users/user-list/src/components/users.js"],"names":["React","useReducer","useEffect","useStore","URL","User","useGitHubApi","dataFetchReducer","Users","isError","isLoading","allUsers","map","item","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,wBAA9B;AAEA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AACzB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA;AAAtB,MAAmCR,QAAQ,EAAjD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,OAAO,iBACN;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CAFJ,EAMGC,SAAS,gBACR;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,GAGRC,QAAQ,CAACC,GAAT,CAAcC,IAAD,iBAAU,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,IAAA,IAAI,EAAED,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,CATJ,CADF;AAcD,CAjBM","sourcesContent":["import React, { useReducer, useEffect } from 'react';\nimport { useStore, URL } from '../store/globalContext';\n\nimport { User } from './user';\nimport { useGitHubApi } from '../services/dataFetching';\nimport { dataFetchReducer } from '../store/reducer';\n\nexport const Users = () => {\n  const { isError, isLoading, allUsers } = useStore();\n\n  return (\n    <div className=\"users\">\n      {isError && (\n        <div className=\"error-message\">\n          <span> Something went wrong</span>\n        </div>\n      )}\n      {isLoading ? (\n        <div className=\"spinner\"></div>\n      ) : (\n        allUsers.map((item) => <User key={item.id} user={item} />)\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}