{"ast":null,"code":"import { useState, useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport { dataFetchReducer } from '../store/reducer';\nexport const useGitHubApi = (initialData, initialUrl) => {\n  const [url, setUrl] = useState(initialUrl);\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: initialData\n  });\n  useEffect(() => {\n    let didCancel = false;\n\n    const fetchData = async () => {\n      dispatch({\n        type: 'FETCH_INIT'\n      });\n\n      try {\n        const result = await axios(url);\n\n        if (!didCancel) {\n          dispatch({\n            type: 'FETCH_SUCCEED',\n            payload: result.data\n          });\n        }\n      } catch (error) {\n        if (!didCancel) {\n          dispatch({\n            type: 'FETCH_FAILED'\n          });\n        }\n      }\n    };\n\n    fetchData();\n    return () => {\n      didCancel = true;\n    };\n  }, [url]);\n  return [state, setUrl, dispatch];\n};","map":{"version":3,"sources":["/var/www/pr2/react/users/user-list/src/services/dataFetching.js"],"names":["useState","useEffect","useReducer","axios","dataFetchReducer","useGitHubApi","initialData","initialUrl","url","setUrl","state","dispatch","isLoading","isError","data","didCancel","fetchData","type","result","payload","error"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,WAAD,EAAcC,UAAd,KAA6B;AACvD,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAACO,UAAD,CAA9B;AAEA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBT,UAAU,CAACE,gBAAD,EAAmB;AACrDQ,IAAAA,SAAS,EAAE,KAD0C;AAErDC,IAAAA,OAAO,EAAE,KAF4C;AAGrDC,IAAAA,IAAI,EAAER;AAH+C,GAAnB,CAApC;AAMAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,SAAS,GAAG,KAAhB;;AACA,UAAMC,SAAS,GAAG,YAAY;AAC5BL,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;;AAEA,UAAI;AACF,cAAMC,MAAM,GAAG,MAAMf,KAAK,CAACK,GAAD,CAA1B;;AAEA,YAAI,CAACO,SAAL,EAAgB;AACdJ,UAAAA,QAAQ,CAAC;AAAEM,YAAAA,IAAI,EAAE,eAAR;AAAyBE,YAAAA,OAAO,EAAED,MAAM,CAACJ;AAAzC,WAAD,CAAR;AACD;AACF,OAND,CAME,OAAOM,KAAP,EAAc;AACd,YAAI,CAACL,SAAL,EAAgB;AACdJ,UAAAA,QAAQ,CAAC;AAAEM,YAAAA,IAAI,EAAE;AAAR,WAAD,CAAR;AACD;AACF;AACF,KAdD;;AAgBAD,IAAAA,SAAS;AAET,WAAO,MAAM;AACXD,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFD;AAGD,GAvBQ,EAuBN,CAACP,GAAD,CAvBM,CAAT;AAyBA,SAAO,CAACE,KAAD,EAAQD,MAAR,EAAgBE,QAAhB,CAAP;AACD,CAnCM","sourcesContent":["import { useState, useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport { dataFetchReducer } from '../store/reducer';\n\nexport const useGitHubApi = (initialData, initialUrl) => {\n  const [url, setUrl] = useState(initialUrl);\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: initialData,\n  });\n\n  useEffect(() => {\n    let didCancel = false;\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_INIT' });\n\n      try {\n        const result = await axios(url);\n\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_SUCCEED', payload: result.data });\n        }\n      } catch (error) {\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_FAILED' });\n        }\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      didCancel = true;\n    };\n  }, [url]);\n\n  return [state, setUrl, dispatch];\n};\n"]},"metadata":{},"sourceType":"module"}