{"ast":null,"code":"var _jsxFileName = \"/var/www/pr2/react/users/user-list/src/pages/userDetail.js\";\nimport React, { useState, useEffect } from 'react';\nimport { URL, useStore } from '../store/globalContext';\nimport { useParams } from 'react-router-dom';\nimport { useGitHubApi } from '../services/dataFetching';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nexport const UserDetail = () => {\n  const {\n    updateUser\n  } = useStore();\n  let {\n    login\n  } = useParams();\n  const [{\n    isError,\n    isLoading,\n    data\n  }, doFetch, dispatch] = useGitHubApi({}, `${URL}/${login}`);\n  let {\n    avatar_url,\n    name,\n    location,\n    blog,\n    followers,\n    following,\n    html_url\n  } = data;\n  const [text, setText] = useState('');\n  const [editable, setEditable] = useState(false);\n  useEffect(() => {\n    setText(name);\n  }, [name]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const newUser = { ...data,\n      name: text\n    };\n    dispatch(updateUser(newUser));\n    setEditable(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isError && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \" Something went wrong\")), isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: avatar_url,\n    alt: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => {\n      setEditable(true);\n    },\n    title: \"editable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, ' ', name, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEdit,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }), editable && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: text || '',\n    onChange: e => setText(e.target.value),\n    onBlur: onSubmit,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }), ' ')), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, \"from\"), /*#__PURE__*/React.createElement(\"span\", {\n    title: \"editable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, location))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    rel: \"noopener noreferrer\",\n    href: blog,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, \"blog\", ' '))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gitHub-account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    rel: \"noopener noreferrer\",\n    href: html_url,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"gitHub account\", ' ')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"followers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"followers : \", followers), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"following : \", following))));\n};","map":{"version":3,"sources":["/var/www/pr2/react/users/user-list/src/pages/userDetail.js"],"names":["React","useState","useEffect","URL","useStore","useParams","useGitHubApi","faEdit","FontAwesomeIcon","UserDetail","updateUser","login","isError","isLoading","data","doFetch","dispatch","avatar_url","name","location","blog","followers","following","html_url","text","setText","editable","setEditable","onSubmit","e","preventDefault","newUser","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,wBAA9B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AAEA,SAASC,MAAT,QAAuB,mCAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAiBN,QAAQ,EAA/B;AACA,MAAI;AAAEO,IAAAA;AAAF,MAAYN,SAAS,EAAzB;AACA,QAAM,CAAC;AAAEO,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA;AAAtB,GAAD,EAA+BC,OAA/B,EAAwCC,QAAxC,IAAoDV,YAAY,CACpE,EADoE,EAEnE,GAAEH,GAAI,IAAGQ,KAAM,EAFoD,CAAtE;AAKA,MAAI;AACFM,IAAAA,UADE;AAEFC,IAAAA,IAFE;AAGFC,IAAAA,QAHE;AAIFC,IAAAA,IAJE;AAKFC,IAAAA,SALE;AAMFC,IAAAA,SANE;AAOFC,IAAAA;AAPE,MAQAT,IARJ;AAUA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACyB,QAAD,EAAWC,WAAX,IAA0B1B,QAAQ,CAAC,KAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,OAAO,CAACP,IAAD,CAAP;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;;AAIA,QAAMU,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,OAAO,GAAG,EACd,GAAGjB,IADW;AAEdI,MAAAA,IAAI,EAAEM;AAFQ,KAAhB;AAIAR,IAAAA,QAAQ,CAACN,UAAU,CAACqB,OAAD,CAAX,CAAR;AACAJ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GARD;;AAUA,sBACE,0CACGf,OAAO,iBACN;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CAFJ,EAMGC,SAAS,gBACR;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,gBAGR;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEI,UAAV;AAAsB,IAAA,GAAG,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,OAAO,EAAE,MAAM;AACbU,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAHH;AAIE,IAAA,KAAK,EAAC,UAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMG,GANH,EAOGT,IAPH,eAQE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEX,MAAvB;AAA+B,IAAA,IAAI,EAAC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASGmB,QAAQ,iBACP;AAAM,IAAA,QAAQ,EAAEE,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEJ,IAAI,IAAI,EAFjB;AAGE,IAAA,QAAQ,EAAGK,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACG,MAAF,CAASC,KAAV,CAH1B;AAIE,IAAA,MAAM,EAAEL,QAJV;AAKE,IAAA,SAAS,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOK,GAPL,CAVJ,CADF,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,IAAA,KAAK,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBT,QAAxB,CAFF,CAtBF,CAJF,eA+BE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,GAAG,EAAC,qBAAP;AAA6B,IAAA,IAAI,EAAEC,IAAnC;AAAyC,IAAA,MAAM,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACO,GADP,CADF,CADF,CA/BF,eAsCE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,GAAG,EAAC,qBAAP;AAA6B,IAAA,IAAI,EAAEG,QAAnC;AAA6C,IAAA,MAAM,EAAC,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACiB,GADjB,CADF,CAtCF,eA2CE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAkBF,SAAlB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAkBC,SAAlB,CAFF,CA3CF,CATJ,CADF;AA6DD,CA/FM","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { URL, useStore } from '../store/globalContext';\nimport { useParams } from 'react-router-dom';\nimport { useGitHubApi } from '../services/dataFetching';\n\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport const UserDetail = () => {\n  const { updateUser } = useStore();\n  let { login } = useParams();\n  const [{ isError, isLoading, data }, doFetch, dispatch] = useGitHubApi(\n    {},\n    `${URL}/${login}`\n  );\n\n  let {\n    avatar_url,\n    name,\n    location,\n    blog,\n    followers,\n    following,\n    html_url,\n  } = data;\n\n  const [text, setText] = useState('');\n  const [editable, setEditable] = useState(false);\n  useEffect(() => {\n    setText(name);\n  }, [name]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const newUser = {\n      ...data,\n      name: text,\n    };\n    dispatch(updateUser(newUser));\n    setEditable(false);\n  };\n\n  return (\n    <>\n      {isError && (\n        <div className=\"error-message\">\n          <span> Something went wrong</span>\n        </div>\n      )}\n      {isLoading ? (\n        <div className=\"spinner\"></div>\n      ) : (\n        <div className=\"user-detail\">\n          <div className=\"avatar\">\n            <img src={avatar_url} alt=\"avatar\" />\n          </div>\n          <div className=\"user-name\">\n            <span\n              onClick={() => {\n                setEditable(true);\n              }}\n              title=\"editable\"\n            >\n              {' '}\n              {name}\n              <FontAwesomeIcon icon={faEdit} size=\"sm\" />\n              {editable && (\n                <form onSubmit={onSubmit}>\n                  <input\n                    type=\"text\"\n                    value={text || ''}\n                    onChange={(e) => setText(e.target.value)}\n                    onBlur={onSubmit}\n                    autoFocus\n                  />{' '}\n                </form>\n              )}\n            </span>\n            <p>\n              <span>from</span>\n              <span title=\"editable\">{location}</span>\n            </p>\n          </div>\n          <div className=\"blog\">\n            <p>\n              <a rel=\"noopener noreferrer\" href={blog} target=\"_blank\">\n                blog{' '}\n              </a>\n            </p>\n          </div>\n          <div className=\"gitHub-account\">\n            <a rel=\"noopener noreferrer\" href={html_url} target=\"_blank\">\n              gitHub account{' '}\n            </a>\n          </div>\n          <div className=\"followers\">\n            <div>followers : {followers}</div>\n            <div>following : {following}</div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}